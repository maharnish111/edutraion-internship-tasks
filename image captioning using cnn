
import os
import string
import numpy as np
import tensorflow as tf
from tensorflow.keras.applications.vgg16 import VGG16, preprocess_input
from tensorflow.keras.preprocessing.image import load_img, img_to_array
from tensorflow.keras.preprocessing.sequence import pad_sequences
from tensorflow.keras.models import Model
from tensorflow.keras.layers import Input, Dense, LSTM, Embedding, Dropout, add

# Example caption processing
from nltk.tokenize import word_tokenize
import nltk
nltk.download('punkt')

# Feature extraction from image using VGG16
def extract_features(filename):
    model = VGG16()
    model = Model(inputs=model.inputs, outputs=model.layers[-2].output)
    image = load_img(filename, target_size=(224, 224))
    image = img_to_array(image)
    image = np.expand_dims(image, axis=0)
    image = preprocess_input(image)
    feature = model.predict(image, verbose=0)
    return feature

# Example caption generation (mocked)
def generate_caption(photo_feature):
    return "a man riding a horse"

# Test with one image
img_path ='/content/IMG_0937.JPG'  # Replace with your image

if os.path.exists(img_path):
    feature = extract_features(img_path)
    caption = generate_caption(feature)
    print("Generated Caption:", caption)
else:
    print(f"Error: Image file not found at {img_path}")
